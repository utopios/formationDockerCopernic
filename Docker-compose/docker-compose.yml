version: "3.9"
services: 
    d1:
        image: nginx
        container_name: d1nginx
        ports: 
            - "3002:80"
        networks: 
            - front-network
    appweb:
        build: ./app-web
        container_name: appweb
        # entrypoint: "bash"
        ports: 
            - "9090:80"
        networks: 
            - front-network
    postgresdb:
        image: postgres
        container_name: postgresdb
        ports: 
            - "2727:5432"
        environment: 
            POSTGRES_USER: "user"
            POSTGRES_PASSWORD: "password"
        volumes: 
            # - "data:/var/lib/postgresql/data"
            - "./data-postgres:/var/lib/postgresql/data"
        # links: 
        #     - appwebnode
        networks: 
            - data-network
    appweb2:
        container_name: appweb2
        image: httpd
        ports: 
            - "9999:80"
        volumes: 
            - "./app-web/src:/usr/local/apache2/htdocs/"
        networks: 
            - back-network
            - front-network
    appwebnode:
        build: ./app-web-node
        ports: 
            - "4000:3000"
        depends_on: 
            - postgresdb
        volumes: 
            - "./health-check:/app/health-check"
        restart: always
        healthcheck:
            # test: "command de test qui peut Ãªtre dans un fichier de script"
            test : "curl --fail http://localhost:3000"
            interval: "2s"
        networks: 
            - back-network
            - data-network
        # links: 
        #     - postgresdb

volumes: 
    data:

networks: 
    front-network:
    back-network:
    data-network:

